# 王杭格 521030990006

.pos 0
	irmovq stack, %rsp  	
	call main		
	halt			

.align 8
# Source block
src:
        .quad 0x00a
        .quad 0x0b0
        .quad 0xc00
# Destination block
dest:
        .quad 0x111
        .quad 0x222
        .quad 0x333

main:	
	irmovq src, %rdi   # src
    irmovq dest,%rsi   # dest
    irmovq $3,  %rdx   # len = 3 for given example
	call  copy_block		# long copy_block(long *src, long *dest, long len)
	ret

copy_block:
  pushq %r8 # long val 
  pushq %r9  # 8
  pushq %r10 # 1
  xorq  %rax, %rax # result = 0
  irmovq $8, %r10
  irmovq $1, %r9
  jmp check

loop:
  mrmovq 0(%rdi), %r8 # long val = *src;
  addq   %r10, %rdi     # src++;
  rmmovq %r8, 0(%rsi)   # *dest = val
  addq   %r10, %rsi     # dest++; pointer so 12not 1
  xorq   %r8, %rax     # result ^= val;
  subq   %r9, %rdx     # len--;

check:
    andq  %rdx, %rdx   # len > 0
    jne  loop
    popq %r10
    popq %r9
    popq %r8

.pos 0x200
    stack:
