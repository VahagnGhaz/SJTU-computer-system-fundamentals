Y86-64 Processor: pipe-full.hcl
360 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x170, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovq, rA = ----, rB = %rdx, valC = 0x4, valP = 0x14, Stat = AOK
E: instr = irmovq, valC = 0x170, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x170 0x0 --> 0x170

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1e
D: instr = irmovq, rA = ----, rB = %rsi, valC = 0xc8, valP = 0x1e, Stat = AOK
E: instr = irmovq, valC = 0x4, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x170, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x1e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x4 0x0 --> 0x4

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x28
D: instr = irmovq, rA = ----, rB = %rdi, valC = 0x90, valP = 0x28, Stat = AOK
E: instr = irmovq, valC = 0xc8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x4, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x170, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x28, imem_instr = call, f_instr = call
	Execute: ALU: + 0xc8 0x0 --> 0xc8
	Writeback: Wrote 0x170 to register %rsp

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x32
D: instr = call, rA = ----, rB = ----, valC = 0x32, valP = 0x31, Stat = AOK
E: instr = irmovq, valC = 0x90, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0xc8, valA = 0x0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x4, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x32, imem_instr = xorq, f_instr = xorq
	Execute: ALU: + 0x90 0x0 --> 0x90
	Writeback: Wrote 0x4 to register %rdx

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = xorq, rA = %rax, rB = %rax, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = call, valC = 0x32, valA = 0x31, valB = 0x170
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x90, valA = 0x0
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0xc8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x34, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0xfffffffffffffff8 0x170 --> 0x168
	Writeback: Wrote 0xc8 to register %rsi

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x36
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x36, Stat = AOK
E: instr = xorq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %rax, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x168, valA = 0x31
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x90, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x36, imem_instr = jle, f_instr = jle
	Execute: ALU: ^ 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x90 to register %rdi
	Wrote 0x31 to address 0x168

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x8f
D: instr = jle, rA = ----, rB = ----, valC = 0x8f, valP = 0x3f, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x4, valB = 0x4
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = xorq, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = call, valE = 0x168, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8f, imem_instr = ret, f_instr = ret
	Execute: ALU: & 0x4 0x4 --> 0x4
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x168 to register %rsp

Cycle 9. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x90
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x90, Stat = AOK
E: instr = jle, valC = 0x8f, valA = 0x3f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x4, valA = 0x4
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = xorq, valE = 0x0, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x90, imem_instr = <bad>, f_instr = <bad>
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rax

Cycle 10. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x90
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x3f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x4, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3f, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x4 to register %rdx

Cycle 11. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x49
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x49, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x49, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 12. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x90
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x90 --> 0x90

Cycle 13. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x90, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Memory: Read 0x1 from 0x90
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 14. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x55
D: instr = andq, rA = %r10, rB = %r10, valC = 0x0, valP = 0x55, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x1, valB = 0xc8
   srcA = %r10, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x90, valM = 0x1, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x55, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0xc8 --> 0xc8
	Writeback: Wrote 0x1 to register %r10

Cycle 15. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = jle, rA = ----, rB = ----, valC = 0x6a, valP = 0x5e, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %r10, srcB = %r10, dstE = %r10, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0xc8, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6a, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Wrote 0x1 to address 0xc8

Cycle 16. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x74
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x74, Stat = AOK
E: instr = jle, valC = 0x6a, valA = 0x5e, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0xc8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x74, imem_instr = subq, f_instr = subq
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 17. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x76
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x5e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %r10

Cycle 18. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x68
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x68, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x68, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 19. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x6a, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6a, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 20. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x74
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x74, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x1, valB = 0x0
   srcA = %r10, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x74, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0x1 0x0 --> 0x1
	Execute: New cc = Z=0 S=0 O=0

Cycle 21. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x76
D: instr = subq, rA = %r10, rB = %rdx, valC = 0x0, valP = 0x76, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x1, valA = 0x1
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x76, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1
	Writeback: Wrote 0x1 to register %r10

Cycle 22. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x80
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x8, valP = 0x80, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x4
   srcA = %r10, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x1, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x80, imem_instr = addq, f_instr = addq
	Execute: ALU: - 0x1 0x4 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %rax

Cycle 23. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x82
D: instr = addq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x82, Stat = AOK
E: instr = irmovq, valC = 0x8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0x3, valA = 0x1
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x82, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x8 0x0 --> 0x8
	Writeback: Wrote 0x1 to register %r10

Cycle 24. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x84
D: instr = addq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x84, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x90
   srcA = %r10, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x3, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x84, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x8 0x90 --> 0x98
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %rdx

Cycle 25. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x86
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x86, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0xc8
   srcA = %r10, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x98, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x86, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x8 0xc8 --> 0xd0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x8 to register %r10

Cycle 26. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3f
D: instr = jg, rA = ----, rB = ----, valC = 0x3f, valP = 0x8f, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x3, valB = 0x3
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xd0, valA = 0x8
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x98, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3f, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: & 0x3 0x3 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x98 to register %rdi

Cycle 27. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x49
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x49, Stat = AOK
E: instr = jg, valC = 0x3f, valA = 0x8f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x3, valA = 0x3
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xd0, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x49, imem_instr = rmmovq, f_instr = rmmovq
	Execute: instr = jg, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xd0 to register %rsi

Cycle 28. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x98
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = jg, Cnd = 1, valE = 0x0, valA = 0x8f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x3, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x98 --> 0x98
	Writeback: Wrote 0x3 to register %rdx

Cycle 29. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x98, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Memory: Read 0xfffffffffffffffe from 0x98
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 30. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x55
D: instr = andq, rA = %r10, rB = %r10, valC = 0x0, valP = 0x55, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0xfffffffffffffffe, valB = 0xd0
   srcA = %r10, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x98, valM = 0xfffffffffffffffe, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x55, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0xd0 --> 0xd0
	Writeback: Wrote 0xfffffffffffffffe to register %r10

Cycle 31. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = jle, rA = ----, rB = ----, valC = 0x6a, valP = 0x5e, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0xfffffffffffffffe, valB = 0xfffffffffffffffe
   srcA = %r10, srcB = %r10, dstE = %r10, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0xd0, valA = 0xfffffffffffffffe
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6a, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: & 0xfffffffffffffffe 0xfffffffffffffffe --> 0xfffffffffffffffe
	Execute: New cc = Z=0 S=1 O=0
	Wrote 0xfffffffffffffffe to address 0xd0

Cycle 32. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x74
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x74, Stat = AOK
E: instr = jle, valC = 0x6a, valA = 0x5e, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0xfffffffffffffffe, valA = 0xfffffffffffffffe
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0xd0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x74, imem_instr = subq, f_instr = subq
	Execute: instr = jle, cc = Z=0 S=1 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 33. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x76
D: instr = subq, rA = %r10, rB = %rdx, valC = 0x0, valP = 0x76, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0x5e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0xfffffffffffffffe, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x76, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1
	Writeback: Wrote 0xfffffffffffffffe to register %r10

Cycle 34. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x80
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x8, valP = 0x80, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x3
   srcA = %r10, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x80, imem_instr = addq, f_instr = addq
	Execute: ALU: - 0x1 0x3 --> 0x2
	Execute: New cc = Z=0 S=0 O=0

Cycle 35. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x82
D: instr = addq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x82, Stat = AOK
E: instr = irmovq, valC = 0x8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 1, valE = 0x2, valA = 0x1
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x82, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x8 0x0 --> 0x8
	Writeback: Wrote 0x1 to register %r10

Cycle 36. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x84
D: instr = addq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x84, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x98
   srcA = %r10, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x2, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x84, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x8 0x98 --> 0xa0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x2 to register %rdx

Cycle 37. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x86
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x86, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0xd0
   srcA = %r10, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xa0, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x86, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x8 0xd0 --> 0xd8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x8 to register %r10

Cycle 38. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3f
D: instr = jg, rA = ----, rB = ----, valC = 0x3f, valP = 0x8f, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x2, valB = 0x2
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xd8, valA = 0x8
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xa0, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3f, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: & 0x2 0x2 --> 0x2
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xa0 to register %rdi

Cycle 39. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x49
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x49, Stat = AOK
E: instr = jg, valC = 0x3f, valA = 0x8f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x2, valA = 0x2
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xd8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x49, imem_instr = rmmovq, f_instr = rmmovq
	Execute: instr = jg, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xd8 to register %rsi

Cycle 40. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0xa0
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = jg, Cnd = 1, valE = 0x0, valA = 0x8f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x2, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0xa0 --> 0xa0
	Writeback: Wrote 0x2 to register %rdx

Cycle 41. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0xa0, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Memory: Read 0xfffffffffffffffd from 0xa0
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 42. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x55
D: instr = andq, rA = %r10, rB = %r10, valC = 0x0, valP = 0x55, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0xfffffffffffffffd, valB = 0xd8
   srcA = %r10, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0xa0, valM = 0xfffffffffffffffd, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x55, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0xd8 --> 0xd8
	Writeback: Wrote 0xfffffffffffffffd to register %r10

Cycle 43. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = jle, rA = ----, rB = ----, valC = 0x6a, valP = 0x5e, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0xfffffffffffffffd, valB = 0xfffffffffffffffd
   srcA = %r10, srcB = %r10, dstE = %r10, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0xd8, valA = 0xfffffffffffffffd
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6a, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: & 0xfffffffffffffffd 0xfffffffffffffffd --> 0xfffffffffffffffd
	Execute: New cc = Z=0 S=1 O=0
	Wrote 0xfffffffffffffffd to address 0xd8

Cycle 44. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x74
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x74, Stat = AOK
E: instr = jle, valC = 0x6a, valA = 0x5e, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0xfffffffffffffffd, valA = 0xfffffffffffffffd
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0xd8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x74, imem_instr = subq, f_instr = subq
	Execute: instr = jle, cc = Z=0 S=1 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 45. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x76
D: instr = subq, rA = %r10, rB = %rdx, valC = 0x0, valP = 0x76, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = jle, Cnd = 1, valE = 0x0, valA = 0x5e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0xfffffffffffffffd, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x76, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1
	Writeback: Wrote 0xfffffffffffffffd to register %r10

Cycle 46. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x80
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x8, valP = 0x80, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x2
   srcA = %r10, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x80, imem_instr = addq, f_instr = addq
	Execute: ALU: - 0x1 0x2 --> 0x1
	Execute: New cc = Z=0 S=0 O=0

Cycle 47. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x82
D: instr = addq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x82, Stat = AOK
E: instr = irmovq, valC = 0x8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 1, valE = 0x1, valA = 0x1
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x82, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x8 0x0 --> 0x8
	Writeback: Wrote 0x1 to register %r10

Cycle 48. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x84
D: instr = addq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x84, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0xa0
   srcA = %r10, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x1, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x84, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x8 0xa0 --> 0xa8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %rdx

Cycle 49. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x86
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x86, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0xd8
   srcA = %r10, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xa8, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x86, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x8 0xd8 --> 0xe0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x8 to register %r10

Cycle 50. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3f
D: instr = jg, rA = ----, rB = ----, valC = 0x3f, valP = 0x8f, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xe0, valA = 0x8
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xa8, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3f, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: & 0x1 0x1 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xa8 to register %rdi

Cycle 51. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x49
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x49, Stat = AOK
E: instr = jg, valC = 0x3f, valA = 0x8f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xe0, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x49, imem_instr = rmmovq, f_instr = rmmovq
	Execute: instr = jg, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xe0 to register %rsi

Cycle 52. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0xa8
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = jg, Cnd = 1, valE = 0x0, valA = 0x8f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x1, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0xa8 --> 0xa8
	Writeback: Wrote 0x1 to register %rdx

Cycle 53. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = rmmovq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x53, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0xa8, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x53, imem_instr = andq, f_instr = andq
	Memory: Read 0x4 from 0xa8
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 54. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x55
D: instr = andq, rA = %r10, rB = %r10, valC = 0x0, valP = 0x55, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x4, valB = 0xe0
   srcA = %r10, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0xa8, valM = 0x4, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x55, imem_instr = jle, f_instr = jle
	Execute: ALU: + 0x0 0xe0 --> 0xe0
	Writeback: Wrote 0x4 to register %r10

Cycle 55. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = jle, rA = ----, rB = ----, valC = 0x6a, valP = 0x5e, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x4, valB = 0x4
   srcA = %r10, srcB = %r10, dstE = %r10, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0xe0, valA = 0x4
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6a, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: & 0x4 0x4 --> 0x4
	Execute: New cc = Z=0 S=0 O=0
	Wrote 0x4 to address 0xe0

Cycle 56. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x74
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x74, Stat = AOK
E: instr = jle, valC = 0x6a, valA = 0x5e, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x4, valA = 0x4
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0xe0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x74, imem_instr = subq, f_instr = subq
	Execute: instr = jle, cc = Z=0 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 57. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x76
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jle, Cnd = 0, valE = 0x0, valA = 0x5e
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x4, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x4 to register %r10

Cycle 58. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x68
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x68, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jle, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x68, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 59. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x6a, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6a, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 60. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x74
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x1, valP = 0x74, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %r10, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x74, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0x1 0x1 --> 0x2
	Execute: New cc = Z=0 S=0 O=0

Cycle 61. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x76
D: instr = subq, rA = %r10, rB = %rdx, valC = 0x0, valP = 0x76, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x2, valA = 0x1
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x76, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1
	Writeback: Wrote 0x1 to register %r10

Cycle 62. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x80
D: instr = irmovq, rA = ----, rB = %r10, valC = 0x8, valP = 0x80, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %r10, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x2, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x80, imem_instr = addq, f_instr = addq
	Execute: ALU: - 0x1 0x1 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x2 to register %rax

Cycle 63. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x82
D: instr = addq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x82, Stat = AOK
E: instr = irmovq, valC = 0x8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r10, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0x0, valA = 0x1
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x82, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x8 0x0 --> 0x8
	Writeback: Wrote 0x1 to register %r10

Cycle 64. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x84
D: instr = addq, rA = %r10, rB = %rsi, valC = 0x0, valP = 0x84, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0xa8
   srcA = %r10, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8, valA = 0x0
   dstE = %r10, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x0, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x84, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x8 0xa8 --> 0xb0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x0 to register %rdx

Cycle 65. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x86
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x86, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0xe0
   srcA = %r10, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xb0, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8, valM = 0x0, dstE = %r10, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x86, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x8 0xe0 --> 0xe8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x8 to register %r10

Cycle 66. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x3f
D: instr = jg, rA = ----, rB = ----, valC = 0x3f, valP = 0x8f, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xe8, valA = 0x8
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xb0, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3f, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: & 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0xb0 to register %rdi

Cycle 67. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x49
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x49, Stat = AOK
E: instr = jg, valC = 0x3f, valA = 0x8f, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xe8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x49, imem_instr = rmmovq, f_instr = rmmovq
	Execute: instr = jg, cc = Z=1 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xe8 to register %rsi

Cycle 68. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x53
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jg, Cnd = 0, valE = 0x0, valA = 0x8f
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x0, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8f, imem_instr = ret, f_instr = ret
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rdx

Cycle 69. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x90
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x90, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x90, imem_instr = <bad>, f_instr = <bad>
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 70. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x90
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x168, valB = 0x168
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x90, imem_instr = <bad>, f_instr = <bad>
	Execute: ALU: + 0x8 0x168 --> 0x170

Cycle 71. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x90
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x170, valA = 0x168
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x90, imem_instr = <bad>, f_instr = <bad>
	Memory: Read 0x31 from 0x168
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 72. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x90
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x170, valM = 0x31, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x31, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x170 to register %rsp

Cycle 73. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x32
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x32, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x32, imem_instr = xorq, f_instr = xorq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 74. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = xorq, rA = %rax, rB = %rax, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x34, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 75. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x36
D: instr = andq, rA = %rdx, rB = %rdx, valC = 0x0, valP = 0x36, Stat = AOK
E: instr = xorq, valC = 0x0, valA = 0x2, valB = 0x2
   srcA = %rax, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x36, imem_instr = jle, f_instr = jle
	Execute: ALU: ^ 0x2 0x2 --> 0x0

Cycle 76. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x8f
D: instr = jle, rA = ----, rB = ----, valC = 0x8f, valP = 0x3f, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %rdx, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x8f, imem_instr = ret, f_instr = ret
	Execute: ALU: & 0x0 0x0 --> 0x0
77 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x0000000000000002
%rsp:	0x0000000000000000	0x0000000000000170
%rsi:	0x0000000000000000	0x00000000000000e8
%rdi:	0x0000000000000000	0x00000000000000b0
%r10:	0x0000000000000000	0x0000000000000008
Changed Memory State:
0x00c8:	0x0000000000cdefab	0x0000000000000001
0x00d0:	0x0000000000cdefab	0xfffffffffffffffe
0x00d8:	0x0000000000cdefab	0xfffffffffffffffd
0x00e0:	0x0000000000cdefab	0x0000000000000004
0x0168:	0x0000000000000000	0x0000000000000031
ISA Check Succeeds
CPI: 73 cycles/58 instructions = 1.26
